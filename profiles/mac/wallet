#!/bin/bash

# only load these if wallet is installed
if [ -e "/Applications/Wallet.app" ]
then

# setup path to the applications expected path
export wallet_db="/Users/$(whoami)/Library/Containers/com.acrylic.Wallet/Data/Library/Application Support/Wallet/Database.wallet"

# this file should include your list of wallet databases
WALLET_DBS=$HOME/.cellar/wallet/databases

# here for examples and fall back
# done this way since bash 4 on mac wasn't stable at the time I wrote this
export wallet_list=( personal shared )
export wallet_files=( "$HOME/.wallet/Personal.wallet" "$HOME/.wallet/Shared.wallet" )

# load in your key list
if [ -e "$WALLET_DBS" ]
then
  . $WALLET_DBS
fi

# do autocomplete for the wallet list
complete -W "$(echo ${wallet_list[@]})" wallet_manage

# allow quick switching between wallets. Make sure wallet is closed when
# you switch
wallet_manage() {
  # set the name, just in case
  wallet_current false

  # if no parameter is passed in, or list show the list
  if [ -z $1 ] || [ "$1" == "list" ]
  then
    i=1
    for name in ${wallet_list[@]}
    do
      # check if the current wallet is this one
      if [ "$name" == "$wallet_current_name" ]
      then
        current=" (selected)"
      else
        current=""
      fi
      # show the wallets
      echo " $i. $name$current"

      i=$(expr $i + 1)
    done
  else
    # allow selecting by number or name
    re='^[0-9]+$'
    if [[ $1 =~ $re ]]
    then
      index=$(expr $1 - 1)
      name=${wallet_list[$index]}
    else
      # get the index number (simplifies the file selection)
      for (( i = 0; i < ${#wallet_list[@]}; i++ )); do
        if [ "${wallet_list[$i]}" == "$1" ]; then
          index=$i
          name=$1
          break
        fi
      done
    fi

    if [ "$wallet_current_name" == "$name" ]
    then
      echo "already using that wallet."
    else
      target=${wallet_files[$index]}

      if [ ! -e "$target" ];
      then
        echo "'$name' doesn't exist."
      else
        ln -f "$target" "$wallet_db"
        export wallet_current_name=$name
        echo "Switched to '$name'"
      fi
    fi
  fi
}

# identify what wallet file you are currently using
wallet_current() {
  do_echo=$1

  if [ -z "$do_echo" ]
  then
    do_echo=true
  fi

  # clear the current name
  unset wallet_current_name

  # get the inode for the current wallet
  current_inode=$(ls -il "$wallet_db" | awk '{print $1'})
  for (( i = 0; i < ${#wallet_files[@]}; i++ ))
  do
    target=${wallet_files[$i]}

    # get inode for wallet
    target_inode=$(ls -il "$target" | awk '{print $1'})

    if [ "$current_inode" == "$target_inode" ]
    then
      export wallet_current_name=${wallet_list[$i]}
      break
    fi
  done

  if [ $do_echo == true ]
  then
    if [ -z "$wallet_current_name" ]
    then
      echo "Current wallet doesn't match a configured one"
    else
      echo "Using '$wallet_current_name'"
    fi
  fi
}

wallet_current false

fi
