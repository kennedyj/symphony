set nocompatible                    " get out of vi-compatible mode

let NERDTreeIgnore = []

" local vimrc configuration
" TODO need to figure out where I want this to be
let s:localrc = expand($HOME . '/.vimrc.local')
if filereadable(s:localrc)
  exec ':so ' . s:localrc
endif

if ! exists('g:ctrlp_working_path_mode')
  let g:ctrlp_working_path_mode = 'w'
endif

" set directories and files to ignore, see :help ctrlp-options
" this is may also be used by the custom config files
call organism#ctrlpignoredir('\v[\/]\.(git|hg|svn)$')

" this will determine what plugins to load by the plugins
" configuration file. Override this in the vimrc.local as needed
if ! exists('g:local_plugins')
  let g:local_plugins = ['ctrlp', 'gundo', 'fugitive', 'surround', 'syntastic']
endif

" if you want the defaults, but also have others to add, here's a good place
" for it
if ! exists('g:personal_plugins')
  let g:personal_plugins = []
endif

" declare with configs to load
" you can override this in your local settings
if ! exists('g:local_configs')
  let g:local_configs = ['plugins', 'airline', 'nerdtree', 'mappings', 'python', 'java', 'numpad', 'status', 'nonascii']
endif

" change this if you want to load your files from elsewhere
if ! exists('g:local_config_path')
  let g:local_config_path = $HOME . '/.vim/configs/'
endif

for cf in g:local_configs
  let f = expand(g:local_config_path . cf . '.vim')
  if filereadable(f)
    exec ':so ' . f
  endif
endfor

filetype on                         " detect the type of file
filetype plugin indent on           " load filetype plugins

set history=1000                    " remember 1000 lines of history
set undolevels=500                  " make sure I can revert back any changes
"set clipboard+=unnamed              " share clipboard among vi windows
set go-=a                           " dont add visual selections to the clipboard
set ffs=unix,dos,mac                " support the filetypes in this order
set viminfo+=!                      " make sure it can save viminfo
set isk+=_,$,@,%,#,-                " none of these should be word dividers

" Make Diff better
set diffopt=filler
set diffopt+=iwhite

set noswapfile                      " don't make the swap files
set nobackup                        " don't make a backup file
set noautowrite                     " do not save the file automatically if it changes
" if using backup, try these
"set backupdir=$HOME/.vim/backup    " where to put backup files
"set directory=/tmp                 " temp directory (this is where .swp files will be)

set lsp=0                           " space text out (easier to read)
set wildmenu                        " make use of the 'status line' to show command line commands, filenames and more
set lz                              " lazy redraw (don't redraw while running macros)
set backspace=indent,eol,start      " Specify backspacing options
set backspace=2                     " make backspace work normal
set whichwrap+=<,>,[,]              " cursor keys can wrap too. normal mode <,> insert mode [,]
set whichwrap+=h,l                  " enable h and l to wrap lines
set shortmess=atI                   " shortens messages to avoid 'press a key' prompt
set report=0                        " tell me when anything is changed via :

set ch=2                            " Command line height
set ic                              " Show incomplete commands
set showcmd                         " Show Incomplete Commands
set so=5                            " Set the resistance to scroll

"set smartcase                       " Override ignorecase if the search pattern is typed in
set ignorecase                      " Ignore case in pattern searchs
set hlsearch                        " Switch on search pattern highlighting.
set showmatch                       " show matching brackets
set mat=2                           " how many tenths of a second to blick matching bracket
set incsearch                       " do 'highlight' as you type your search phrase
set novisualbell                    " don't blink at me
set noerrorbells                    " don't make a sound

"set formatoptions                   " (default "tcq")
"set formatoptions=tcqrn             " see help deals with formating
set formatoptions-=t                 " don't auto wrap long lines

" set a custom text width (80 for python)
set textwidth=0
" set a wrap margin how many charecters before the edge to wrap at.
set wrapmargin=0

set autoindent                      " autoindent
"set smartindent                     " smartindent
"set cindent                         " stricter rules for C programs

set tabstop=2                       " set the same (tabstop)
set shiftwidth=2                    " set the same (tabstop)
set softtabstop=2                   " set the same (tabstop)
set cino=2                          " set the same (tabstop)
set expandtab                       " Expand Tabs to Whitespace
set wrap                            " wrap lines
set showbreak=>..                   " what to put in front of the wrapped line
set number                          " show line numbers
set nolist                          " turn off list by default

" tabs
set tabpagemax=15                   " allow 15 tabs to be open

" windows and buffers
set swb=useopen,usetab
set splitbelow                      " send the split down
set splitright                      " send the split right

" sets chars to represent tab,trail... when in list mode; try ':set list'
" doesn't always need to be used
set listchars=tab:\|\ ,trail:.,extends:>,precedes:<,eol:$

" sets status line to display file format, type, current char ascii,hex codes, current cursor position
set laststatus=2                    " always show the status line

" turn off folding, but when needed, these options are useful
set nofoldenable
"set foldmethod=marker
"set fmr={{{,}}}
"set nofen

" Hide the mouse pointer while typing
set mousehide
set mousem=popup
set mouset=500

" mouse modes, if you're into that (n=normal, v=visual)
"set mouse=nv

" Set nice colors
syntax enable
" choose the dark color scheme

set magic                           " Change the special charecters for searching
set smd                             " Enable Show Mode on the last line
set notitle                         " Adding this should prevent the 'Thanks for flying with VIM'

" enable/disable spell check
command! SpellOn setlocal spell spelllang=en_us
command! SpellOff setlocal nospell
map ,sp <ESC>:setlocal spell spelllang=en_us<CR>

" auto-complete and omnicomplete
" see :help ins-completion and :help complete
set omnifunc=syntaxcomplete#Complete

" allow vim to work normally for crontabs
if $VIM_CRONTAB == "true"
  set nobackup
  set nowritebackup
endif

let g:syntastic_html_tidy_ignore_errors=[" proprietary attribute ", " is not recognized", "discarding unexpected ", "trimming empty "]

augroup markdown
    au!
    au BufNewFile,BufRead *.md,*.markdown setlocal filetype=ghmarkdown
augroup END
" vim:set ts=2 sw=2 nowrap:
